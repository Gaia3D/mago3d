<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gaia3d.persistence.LayerMapper">

    <!-- Layer 총 건수 -->
    <select id="getLayerTotalCount" parameterType="layer" resultType="long">
        /* getLayerTotalCount */
        SELECT COUNT(layer_id)
        FROM layer a LEFT JOIN layer_group b
			ON a.layer_group_id = b.layer_group_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="layerGroupId != null and layerGroupId gt 0">
			AND a.layer_group_id = #{layerGroupId}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND a.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND a.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
    </select>

    <!-- Layer 목록 -->
    <select id="getListLayer" parameterType="layer" resultType="layer">
        /* getListLayer */
        SELECT a.*, b.layer_group_name
        FROM layer a LEFT JOIN layer_group b
        	ON a.layer_group_id = b.layer_group_id
		<trim prefix="WHERE" prefixOverrides="AND">
        	<if test="layerGroupId != null and layerGroupId gt 0">
			AND a.layer_group_id = #{layerGroupId}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND a.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND a.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
		<choose>
		<when test="orderWord != null and orderWord != '' and orderValue != null and orderValue != ''">
		ORDER BY a.${orderWord} ${orderValue}
		</when>
		<otherwise>
		ORDER BY a.insert_date DESC, layer_id DESC
		</otherwise>
		</choose>
		OFFSET #{offset} LIMIT #{limit}
    </select>

    <!-- layer 정보 취득 -->
    <select id="getLayer" parameterType="int" resultType="layer">
        /* getLayer */
        SELECT A.*, B.layer_group_name, C.rule_name
        FROM layer A LEFT JOIN layer_group B
            	ON B.layer_group_id = A.layer_group_id
			LEFT JOIN rule C
			   ON A.rule_id = C.rule_id
        WHERE A.layer_id = #{layerId}
    </select>
    
    <select id="isLayerKeyDuplication" parameterType="string" resultType="boolean">
    	/* isLayerKeyDuplication */
    	SELECT
			CASE
				WHEN COUNT(*) > 0 THEN true
				ELSE false
			END AS duplication
		FROM layer
		WHERE layer_key = #{value}
    </select>

    <!-- 자식 레이어 중 순서가 최대인 레이어를 검색 -->
    <select id="getMaxViewOrderChildLayer" parameterType="int" resultType="layer">
        /* getMaxViewOrderChildLayer */
        SELECT * FROM layer WHERE parent = #{parent} ORDER BY view_order DESC LIMIT 1
    </select>

    <!-- 자식 레이어 개수 -->
    <select id="getChildLayerCount" parameterType="int" resultType="int">
        /* getChildLayerCount */
        SELECT COUNT(layer_id) FROM layer WHERE parent = #{layerId}
    </select>

	<!-- 사용안함. 삭제해야 함 -->
    <!-- 레이어 테이블의 컬럼 타입이 어떤 geometry 타입인지를 구함 -->
<!--    <select id="getGeometryType" parameterType="layer" resultType="string">-->
<!--        /* getGeometryType */-->
<!--        SELECT ST_GeometryType(wkb_geometry) AS geometryType-->
<!--        FROM ${schema}.${tableName}-->
<!--        WHERE enable_yn = 'Y'-->
<!--        LIMIT 1-->
<!--    </select>-->

    <select id="getLayerColumn" parameterType="string" resultType="string">
    	/* getLayerColumn */
    	SELECT ARRAY_TO_STRING(
    		ARRAY(
	    		SELECT ''||A.column_name||''
	        	FROM information_schema.columns As A
	            WHERE table_name = #{value}
	            	AND  A.column_name NOT IN ('enable_yn', 'version_id')
	    		), ','
	    	)
    </select>

	<select id="isLayerExists" parameterType="layer" resultType="string">
        /* isLayerExists */
        SELECT tablename FROM pg_tables WHERE schemaname = #{schema} AND tablename = #{tableName}
    </select>

	<select id="addColumnToLayer" parameterType="layer">
		/* addColumnToLayer */
		ALTER TABLE ${schema}.${tableName}
			ADD COLUMN IF NOT EXISTS     version_id INTEGER DEFAULT 0,
			ADD COLUMN IF NOT EXISTS     enable_yn CHAR(1)
	</select>

    <!-- layer 등록 -->
    <insert id="insertLayer" parameterType="layer">
		/* insertLayer */
        <selectKey keyProperty="layerId" resultType="int" order="BEFORE">
            SELECT NEXTVAL('layer_seq')
        </selectKey>
        INSERT INTO layer (
            layer_id, layer_group_id, sharing, layer_name, layer_key, rule_id, ogc_web_services, layer_type, geometry_type,
            layer_line_color, layer_line_style, layer_fill_color, layer_alpha_style, default_display, available,
        	label_display, coordinate, description, z_index, user_id, layer_insert_type, cache_available
            <if test="viewOrder != null and viewOrder gt 0">
				, view_order
			</if>
        ) VALUES (
			#{layerId}, #{layerGroupId}, #{sharing}, #{layerName}, #{layerKey}, #{ruleId}, #{ogcWebServices}, #{layerType}, #{geometryType},
			#{layerLineColor}, #{layerLineStyle}, #{layerFillColor}, #{layerAlphaStyle}, #{defaultDisplay}, #{available},
			#{labelDisplay}, #{coordinate}, #{description}, #{zIndex}, #{userId}, #{layerInsertType}, #{cacheAvailable}
			<if test="viewOrder != null and viewOrder gt 0">
				, #{viewOrder}
			</if>
        )
    </insert>

    <!-- layer 정보 수정 -->
    <update id="updateLayer" parameterType="layer">
        /* updateLayer */
        UPDATE layer SET
	        layer_name = #{layerName},
	        layer_group_id = #{layerGroupId},
	        sharing = #{sharing},
	        layer_key = #{layerKey},
            rule_id = #{ruleId},
			ogc_web_services = #{ogcWebServices},
	        layer_type = #{layerType},
	        geometry_type = #{geometryType},
	        layer_line_color = #{layerLineColor},
	        layer_line_style = #{layerLineStyle},
	        layer_fill_color = #{layerFillColor},
	        layer_alpha_style = #{layerAlphaStyle},
	        default_display = #{defaultDisplay},
	        available = #{available},
	        label_display = #{labelDisplay},
	        coordinate = #{coordinate},
	        description = #{description},
	        z_index = #{zIndex},
	        user_id = #{userId},
	        cache_available = #{cacheAvailable},
	        <if test="viewOrder != null and viewOrder gt 0">
			view_order = #{viewOrder},
			</if>
	        update_date = NOW()
        WHERE layer_id = #{layerId}
    </update>

	<!-- 해당 레이어의 이전 데이터를 전부 비활성화 상태로 수정 -->
	<update id="updateShapePreDataDisable" parameterType="layer">
		/* updateShapePreDataDisable */
		UPDATE ${schema}.${tableName} SET enable_yn = 'N'
	</update>

	<!-- org2org를 이용해서 생성한 테이블을 데이터 버전 갱신 -->
	<update id="updateOgr2OgrDataFileVersion" parameterType="layer">
		/* updateOgr2OgrDataFileVersion */
		UPDATE ${schema}.${tableName}
		SET enable_yn = 'Y',
			version_id = CAST(#{versionId} AS integer)
		WHERE enable_yn IS NULL OR enable_yn = 'Y'
	</update>

	<!-- shape 테이블 데이터 상태 변경 -->
	<update id="updateOgr2OgrStatus" parameterType="layer">
		/* updateOgr2OgrStatus */
		UPDATE ${schema}.${tableName}
		SET enable_yn = 'Y'
		WHERE version_id = CAST(#{versionId} AS integer)
	</update>

    <!-- 레이어 삭제 -->
    <delete id="deleteLayer" parameterType="int">
        /* deleteLayer */
        DELETE FROM layer WHERE layer_id = #{layerId}
    </delete>

    <delete id="dropLayerDetail" parameterType="layer">
        /* dropLayerDetail */
        DROP TABLE ${schema}.${tableName}
    </delete>
</mapper>