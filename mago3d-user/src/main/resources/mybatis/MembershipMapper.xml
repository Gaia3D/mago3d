<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gaia3d.persistence.MembershipMapper">

	<!-- 멤버십 정보 조회 -->
	<select id="getMembershipById" parameterType="int" resultType="membership">
		/* getMembershipByUserId */
		SELECT *
		FROM membership
		WHERE membership_id = #{membershipId}
	</select>

	<!-- 멤버십 정보 조회 -->
	<select id="getMembershipUsageByUserId" parameterType="string" resultType="membershipUsage">
		/* getMembershipUsageByUserId */
		SELECT A.*,
			   B.membership_name AS membershipName,
			   B.upload_file_size AS uploadFileSize,
			   B.convert_file_count AS convertFileCount
		FROM membership_usage A LEFT OUTER JOIN membership B
			ON A.membership_id = B.membership_id
		WHERE A.user_id = #{userId}
	</select>

	<!-- 멤버십 마지막 로그 상태 조회 -->
	<select id="getLastLog" parameterType="string" resultType="membershipLog">
		/* getLastLog */
		SELECT *
		FROM membership_log
		WHERE user_id = #{userId}
		ORDER BY membership_log_id DESC LIMIT 1
	</select>


	<!-- 멤버십 등록 -->
	<insert id="insertMembershipUsage" parameterType="membershipUsage">
		/* insertMembershipUsage */
		<selectKey keyProperty="membershipUsageId" resultType="long" order="BEFORE">
			SELECT NEXTVAL('membership_usage_seq')
		</selectKey>
		INSERT INTO membership_usage(
			membership_usage_id, membership_id, user_id, update_date
		) values(
			#{membershipUsageId}, #{membershipId}, #{userId}, NOW()
		)
	</insert>

	<!-- 멤버십 로그 등록 -->
	<insert id="insertMembershipLog" parameterType="membershipLog">
		/* insertMembershipLog */
		<selectKey keyProperty="membershipLogId" resultType="long" order="BEFORE">
			SELECT NEXTVAL('membership_log_seq')
		</selectKey>
		INSERT INTO membership_log(
			membership_log_id, current_membership_id, request_membership_id, user_id, status
		) values(
			#{membershipLogId}, #{currentMembershipId}, #{requestMembershipId}, #{userId}, #{status}
		)
	</insert>

	<!-- 멤버십 로그 상태 변경 -->
	<update id="updateMembershipLog" parameterType="membershipLog">
		/* updateMembershipLog */
		UPDATE membership_log
		SET status = #{status}
		WHERE membership_log_id = #{membershipLogId}
	</update>

	<!-- 사용량 수정 -->
	<update id="updateUsage" parameterType="membershipUsage">
		/* updateUsage */
		UPDATE membership_usage
		SET
		<if test="membershipId != null and membershipId != ''">
			membership_id = #{membershipId},
		</if>
		<if test="useUploadFileSize != null and useUploadFileSize != ''">
			use_upload_file_size = #{useUploadFileSize},
		</if>
		update_date = NOW()
		WHERE user_id = #{userId}
	</update>

	<!-- 멤버십 변환 횟수 갱신 -->
	<update id="updateMembershipUsageFileCount" parameterType="membershipUsage">
		/* updateMembershipUsageFileCount */
		UPDATE membership_usage
		SET use_convert_file_count = use_convert_file_count + 1,
			update_date = NOW()
		WHERE user_id = #{userId}
	</update>

</mapper>